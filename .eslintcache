[{"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/index.js":"1","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/App.js":"2","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/api/ApiData.js":"3","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/reducers/index.js":"4","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/constants/actionTypes.js":"5","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/Tetris.js":"6","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/gameHelpers.js":"7","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/StartButton.js":"8","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/Stage.js":"9","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/Display.js":"10","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/hooks/useGameStatus.js":"11","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/hooks/useInterval.js":"12","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/hooks/usePlayer.js":"13","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/styles/StyledTetris.js":"14","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/hooks/useStage.js":"15","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/styles/StyledStage.js":"16","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/Cell.js":"17","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/styles/StyledDisplay.js":"18","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/tetrominos.js":"19","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/styles/StyledCell.js":"20","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/header/HeaderPage.js":"21","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/body/BodyPage.js":"22","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/HomePage.js":"23","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Signin.js":"24","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Signup.js":"25","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Profile.js":"26","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Reset.js":"27","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Forget.js":"28","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/actions/users.js":"29","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/reducers/users.js":"30","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/api/ApiLogin.js":"31","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/reducers/messages.js":"32","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/actions/messages.js":"33","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/body/GamePage.js":"34","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameMemory/Memory.js":"35","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameMemory/styles.js":"36","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameMemory/components/Form.js":"37","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameMemory/components/Posts.js":"38"},{"size":467,"mtime":1607791255917,"results":"39","hashOfConfig":"40"},{"size":1231,"mtime":1607962439445,"results":"41","hashOfConfig":"40"},{"size":826,"mtime":1607841213163,"results":"42","hashOfConfig":"40"},{"size":169,"mtime":1607833512504,"results":"43","hashOfConfig":"40"},{"size":227,"mtime":1607839189907,"results":"44","hashOfConfig":"40"},{"size":4985,"mtime":1607847499970,"results":"45","hashOfConfig":"40"},{"size":1613,"mtime":1607792094889,"results":"46","hashOfConfig":"40"},{"size":539,"mtime":1607791746588,"results":"47","hashOfConfig":"40"},{"size":322,"mtime":1607791746546,"results":"48","hashOfConfig":"40"},{"size":214,"mtime":1607791746521,"results":"49","hashOfConfig":"40"},{"size":720,"mtime":1607696321033,"results":"50","hashOfConfig":"40"},{"size":491,"mtime":1607696321034,"results":"51","hashOfConfig":"40"},{"size":1640,"mtime":1607696321034,"results":"52","hashOfConfig":"40"},{"size":580,"mtime":1607792563608,"results":"53","hashOfConfig":"40"},{"size":1558,"mtime":1607696321035,"results":"54","hashOfConfig":"40"},{"size":366,"mtime":1607696321030,"results":"55","hashOfConfig":"40"},{"size":365,"mtime":1607792253331,"results":"56","hashOfConfig":"40"},{"size":361,"mtime":1607696321029,"results":"57","hashOfConfig":"40"},{"size":932,"mtime":1607792236460,"results":"58","hashOfConfig":"40"},{"size":471,"mtime":1607696321029,"results":"59","hashOfConfig":"40"},{"size":2971,"mtime":1607842144113,"results":"60","hashOfConfig":"40"},{"size":1634,"mtime":1607963638111,"results":"61","hashOfConfig":"40"},{"size":565,"mtime":1607801941482,"results":"62","hashOfConfig":"40"},{"size":2378,"mtime":1607840172257,"results":"63","hashOfConfig":"40"},{"size":2278,"mtime":1607841221363,"results":"64","hashOfConfig":"40"},{"size":3613,"mtime":1607838954317,"results":"65","hashOfConfig":"40"},{"size":1567,"mtime":1607836658701,"results":"66","hashOfConfig":"40"},{"size":1737,"mtime":1607840152655,"results":"67","hashOfConfig":"40"},{"size":4493,"mtime":1607963527495,"results":"68","hashOfConfig":"40"},{"size":1132,"mtime":1607839194631,"results":"69","hashOfConfig":"40"},{"size":74,"mtime":1607839551368,"results":"70","hashOfConfig":"40"},{"size":312,"mtime":1607833783906,"results":"71","hashOfConfig":"40"},{"size":332,"mtime":1607841222407,"results":"72","hashOfConfig":"40"},{"size":1875,"mtime":1607848104390,"results":"73","hashOfConfig":"40"},{"size":1427,"mtime":1608049907023,"results":"74","hashOfConfig":"40"},{"size":388,"mtime":1607962274594,"results":"75","hashOfConfig":"40"},{"size":9729,"mtime":1608049914788,"results":"76","hashOfConfig":"40"},{"size":13867,"mtime":1608050904796,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1f3qf7a",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/index.js",[],["167","168"],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/App.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/api/ApiData.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/reducers/index.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/constants/actionTypes.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/Tetris.js",["169"],"import React, { useState,useEffect } from 'react';\nimport {useSelector, useDispatch} from 'react-redux'\n\n\nimport { createStage, checkCollision } from './gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from './hooks/useInterval';\nimport { usePlayer } from './hooks/usePlayer';\nimport { useStage } from './hooks/useStage';\nimport { useGameStatus } from './hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\n// api\nimport { setTetrisScore, getTetrisScores} from '../../../api/ApiData'\nimport { setUsers} from '../../../actions/users'\nimport {Button, ButtonGroup } from '@material-ui/core'\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [TopScores, setTopScores] = useState(null);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  const users = useSelector((state) => state.users)\n  const dispatch = useDispatch()\n\n  useEffect( () => {\n    const userInfo = async() =>{ \n      setTopScores(await getTetrisScores())\n      if(users.jwt){\n        dispatch(setUsers(users.jwt));\n      }}\n      userInfo()\n  }, [])\n\n  // console.log('re-render');\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n\n  const startGame = async () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n\n    setTopScores(await getTetrisScores())\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!!');\n        setTetrisScore(users.userName, score)\n\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    // We don't need to run the interval when we use the arrow down to\n    // move the tetromino downwards. So deactivate it for now.\n\n    // setDropTime(null);\n      drop();\n\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n          <div>\n          <Stage stage={stage} />\n\n            <ButtonGroup fullWidth>\n              <Button color=\"secondary\" variant=\"contained\" style={{margin: '5px'}} onClick={()=> !gameOver && movePlayer(-1)}>left</Button>\n              <Button color=\"secondary\" variant=\"contained\" style={{margin: '5px'}} onClick={()=> !gameOver && playerRotate(stage, 1)}>rotate</Button>\n              <Button color=\"secondary\" variant=\"contained\" style={{margin: '5px'}} onClick={()=> !gameOver && dropPlayer()} >down</Button>\n              <Button color=\"secondary\" variant=\"contained\" style={{margin: '5px'}} onClick={()=> !gameOver && movePlayer(1)}>right</Button>\n            </ButtonGroup>\n          </div>\n\n\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            \n            <div>\n\n              <Display text={<ol style={{margin: 0, paddingLeft: '20px'}}>\n              {\n                TopScores && TopScores.map((data)=> <li key={data.id}>{`${data.username}: ${data.score}`}</li>)\n              }\n\n              </ol>}/>\n              <Display text={`${users.userName}`} />\n              <Display text={`Score: ${score}`} />\n              <Display text={`rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/gameHelpers.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/StartButton.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/Stage.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/Display.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/hooks/useGameStatus.js",["170"],"import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/hooks/useInterval.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/hooks/usePlayer.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/styles/StyledTetris.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/hooks/useStage.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/styles/StyledStage.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/Cell.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/styles/StyledDisplay.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/tetrominos.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameTetris/styles/StyledCell.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/header/HeaderPage.js",["171","172","173","174","175","176"],"import React,{useState,useEffect} from 'react'\n\nimport {AppBar, Toolbar, IconButton, Typography} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\n\nimport {useDispatch} from 'react-redux'\nimport {useSelector} from 'react-redux'\nimport { Link }from 'react-router-dom'\nimport {setUsers, clearUsers, getGoogleJwt} from '../../actions/users'\n\n\n\nconst HeaderPage = () => {\n\n  const users = useSelector((state) => state.users)\n\n  const [jwt, setJwt] = useState(users.jwt)\n  const [user, setUser] = useState(null)\n  const [isLogin, setIsLogin] = useState(false)\n  const [message, setMessage] = useState(null)\n\n\n  const dispatch = useDispatch();\n\n\n  useEffect(()=>{\n    // setUser({userId: users.userId, userName: users.userName, userRole: users.userRole})\n    users.userId ? setIsLogin(true) : setIsLogin(false)\n  },[users])\n\n\n    useEffect(() => {\n      const getJwt = async()=>{\n        const googleIdToken = window.location.href.split('id_token=')[1]\n        if(googleIdToken){\n          dispatch(getGoogleJwt(googleIdToken))\n          setIsLogin(true)\n        }\n        if(jwt){\n          getLocalJwt()\n          setIsLogin(true)\n        }\n\n        \n      }\n      getJwt()\n      console.log(users)\n    }, [])\n\n\n    const getLocalJwt = () =>{\n      dispatch(setUsers(jwt));\n    }\n\n    const handleLogout = async () =>{\n      dispatch(clearUsers())\n      setIsLogin(false)\n    }\n\n\n    return (\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <IconButton\n                    edge=\"start\"\n                    style={{color:'white'}}\n                  >\n                    <MenuIcon />\n                  </IconButton>\n                  <Typography  variant=\"h6\" noWrap>\n                    Game Fun\n                  </Typography>\n                  <div style={{flexGrow: 1}}>\n                    {\n                      isLogin ? <div style={{float: \"right\"}}>\n                                <IconButton onClick={handleLogout} style={{color:'white'}}>\n                                  <ExitToApp />\n                                </IconButton>\n                                <IconButton component={Link} to=\"/profile\" edge=\"end\" style={{color:'white'}}>\n                                  <AccountCircle />\n                                </IconButton>\n                                </div> : <div style={{float: \"right\"}}>\n                                  <Typography  component={Link} to=\"/signin\" style={{color:'white', textDecoration: 'none', cursor: 'pointer', paddingTop: '5px', paddingLeft: '7px'}} variant=\"h6\" noWrap>\n                                    Sign in\n                                  </Typography>\n                                </div>    \n                    }\n                  </div>\n                </Toolbar>\n              </AppBar>\n    )\n}\n\nexport default HeaderPage\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/body/BodyPage.js",["177"],"import React,{useState,useEffect} from 'react'\nimport {Typography, Grid} from '@material-ui/core';\nimport {frontEndProURL} from '../../api/ApiData'\n\nimport { GamePage } from './GamePage';\n\nconst BodyPage = () => {\n\n    const [message, setMessage] = useState(null)\n\n    useEffect(async() => {\n      await setTimeout(() => {\n        setMessage(null)\n      }, 3000);\n    }, [setMessage,message])\n\n    return (\n        <>\n              <Grid container justify=\"center\">\n\n                <Grid item> \n                  { message && <Typography style={{fontSize:'25px', marginTop:'10px'}} color=\"secondary\">{message}</Typography>} \n                </Grid>\n              </Grid>\n              \n\n              <Grid container spacing={3} justify=\"center\">\n                \n                <GamePage content={{\n                  title:'Tetris',\n                  subtitle:'game 1',\n                  content1:'well it is a good game have fun',\n                  content2:'hope you get high score',\n                  author:'jinzhu',\n                  href: `${frontEndProURL}/tetris`,\n                  levels: ['/'],\n                  setMessage\n                  }}/>\n\n                <GamePage content={{\n                  title:'Memory',\n                  subtitle:'game 2',\n                  content1:'Share your memory to others',\n                  content2:'it is interesting it need level 2 or 3',\n                  author:'jinzhu',\n                  href: `${frontEndProURL}/memory`,\n                  levels:['level 2', 'level 3'],\n                  setMessage}}/>\n\n              </Grid>\n        </>\n    )\n}\n\nexport default BodyPage\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/HomePage.js",["178","179","180","181","182"],"import React,{useState, useEffect} from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { setUsers } from '../actions/users';\nimport './style.css'\nimport HeaderPage from '../components/header/HeaderPage'\nimport BodyPage from '../components/body/BodyPage'\n\nconst IndexHome = () => {\n\n  const users = useSelector((state) => state.users)\n  const dispatch = useDispatch();\n\n\n          return (\n            <>\n              <HeaderPage />\n              <BodyPage />\n            </>\n    )\n}\n\nexport default IndexHome\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Signin.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Signup.js",["183"],"import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport { Grid, TextField, Button, Typography,ButtonGroup } from '@material-ui/core';\nimport {backEndProURL} from '../../api/ApiData'\nimport {useDispatch, useSelector} from 'react-redux'\n\nimport {handleSignUp} from '../../actions/users'\n\n\nconst Signup = () => {\n\n    const dispatch = useDispatch();\n    const messages = useSelector((state) => state.messages)\n\n    const [signUp, setSignUp ] =useState({userName: '', userEmail: '', password: ''})\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        \n        setError(messages.error)\n    }, [messages])\n\n    const handleSignUp1 = () =>{\n        dispatch(handleSignUp(signUp.userName, signUp.userEmail, signUp.password))\n    }\n\n\n    return (\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <Typography style={{margin:\"10px\"}} color=\"primary\">Sign Up</Typography>\n            <TextField label=\"UserName\" value={signUp.userName} onChange={(e)=>setSignUp({...signUp, userName: e.target.value})} style={{margin:\"10px\"}} color=\"primary\" type=\"text\" variant=\"outlined\" placeholder=\"UserName\"/>\n            <TextField label=\"Email\" value={signUp.userEmail} onChange={(e)=>setSignUp({...signUp, userEmail: e.target.value})} style={{margin:\"10px\"}} color=\"primary\" type=\"email\" variant=\"outlined\" placeholder=\"Email\"/>\n            <TextField label=\"Password\" value={signUp.password} onChange={(e)=>setSignUp({...signUp, password: e.target.value})} style={{margin:\"10px\"}} color=\"primary\" type=\"password\" variant=\"outlined\" placeholder=\"Password\"/>\n            {\n                error && <Typography color=\"secondary\">{error}</Typography>\n            }\n            <ButtonGroup>\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleSignUp1}>SignUp</Button>\n                <Button color=\"primary\" variant=\"outlined\">\n                    <Link style={{textDecoration:\"none\"}} to=\"/\">Back</Link>\n                </Button>\n            </ButtonGroup>\n            <Button style={{margin:\"10px\"}} type=\"a\" href={`${backEndProURL}/connect/google`} color=\"primary\" variant=\"outlined\">Google</Button>\n\n        </Grid>\n    )\n}\n\nexport default Signup\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Profile.js",["184"],"import React,{useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport moment from 'moment';\nimport {useSelector, useDispatch} from 'react-redux'\nimport { Grid, TextField, Button, Typography,ButtonGroup } from '@material-ui/core';\n\n\nimport {setUsers, handleUpdateUser, handleUpdateLevel} from '../../actions/users'\n\n\nconst Profile = () => {\n\n    const dispatch = useDispatch();\n    const users = useSelector((state) => state.users)\n    const messages = useSelector((state) => state.messages)\n\n\n    const [user, setUser] = useState({userName:'',email:'',userRole:'',provider:'',createdAt:'',updatedAt:''})\n    const [message, setMessage] = useState(null)\n\n\n    useEffect(()=>{\n        if(users.jwt){\n            dispatch(setUsers(users.jwt));\n        }\n        // console.log(users)\n    },[])\n\n    useEffect(()=>{\n       setUser(users)\n    },[users])\n\n    useEffect(() => {\n        console.log(messages)\n        setMessage(messages.message)\n    }, [messages])\n\n\n    \n    const handleUpdateLevel1 = (roleId)=>{\n        dispatch(handleUpdateLevel(user,roleId)) \n        \n    }\n\n\n    const handleUpdateUser1 = () =>{\n        dispatch(handleUpdateUser(user))\n        setMessage('profile changed')\n    }\n\n    return (\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <Typography style={{margin:\"10px\"}} color=\"primary\">Profile</Typography>\n            {\n                user.userName && <>\n                    <TextField label=\"username\" value={user.userName} onChange={(e)=>setUser({...user, userName: e.target.value})} style={{margin:\"10px\"}} color=\"primary\" type=\"text\" variant=\"outlined\" placeholder=\"UserName\"/>\n                    <TextField label=\"email\" disabled value={user.email} onChange={(e)=>setUser({...user, email: e.target.value})} style={{margin:\"10px\"}} color=\"primary\" type=\"email\" variant=\"outlined\" placeholder=\"Email\"/>\n                    {\n                        message && <Typography style={{color:'green', marginBottom:'10px'}}>{message}</Typography>\n                    }\n     \n                    <ButtonGroup color=\"primary\" variant=\"contained\">\n                        <Button onClick={() => handleUpdateLevel1('5fcf9251157b680017117804')}>Level 1</Button>\n                        <Button onClick={() => handleUpdateLevel1('5fcf9292157b680017117857')}>Level 2</Button>\n                        <Button onClick={() => handleUpdateLevel1('5fd2ab2f508269d1a7a8c17b')}>Level 3</Button>\n                    </ButtonGroup>\n\n                    <Typography color=\"secondary\" variant=\"body1\" style={{margin:'10px'}}>I am {user.userRole}</Typography>\n                    <Typography color=\"secondary\" variant=\"body2\" style={{margin:'10px'}}>description: {user.userRole}</Typography>\n                    <Typography color=\"primary\" variant=\"body2\" style={{margin:'10px'}}>provider: {user.provider}</Typography>\n                    <Typography color=\"primary\" variant=\"body2\">createdAt: {moment(user.createdAt).format('YYYY/MM/DD hh:mm:ss') }</Typography>\n                    <Typography color=\"primary\" variant=\"body2\">updatedAt: {moment(user.updatedAt).format('YYYY/MM/DD hh:mm:ss') }</Typography>\n\n                </>\n            }\n    \n            <ButtonGroup style={{margin:'10px'}}>\n                <Button color=\"primary\" variant=\"outlined\" onClick={handleUpdateUser1}>Confirm</Button>\n                <Button color=\"primary\" variant=\"outlined\">\n                    <Link style={{textDecoration:\"none\"}} to=\"/\">Back</Link>\n                </Button>\n            </ButtonGroup>\n\n        </Grid>\n    )\n}\n\nexport default Profile\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Reset.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/login/Forget.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/actions/users.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/reducers/users.js",["185"],"import { SET_USERS, EDIT_USERS, CLEAR_USERS } from '../constants/actionTypes';\n\nexport default (users = {jwt: localStorage.getItem('jwt')}, action) => {\n  switch (action.type) {\n    case CLEAR_USERS:\n      return {};\n    case SET_USERS:\n      console.log(action.payload)\n      return {...users, \n        userName: action.payload.username, \n        userRole: action.payload.role.name, \n        descriptionRole: action.payload.role.description, \n        userId: action.payload.id, \n        createdAt: action.payload.createdAt, \n        provider: action.payload.provider, \n        updatedAt: action.payload.updatedAt, \n        email: action.payload.email}\n    case EDIT_USERS:\n      console.log(action.payload)\n      return {...users, \n        userName: action.payload.username, \n        userRole: action.payload.role.name, \n        descriptionRole: action.payload.role.description, \n        userId: action.payload.id, \n        createdAt: action.payload.createdAt, \n        provider: action.payload.provider, \n        updatedAt: action.payload.updatedAt, \n        email: action.payload.email}\n\n    default:\n      return users;\n  }\n};\n\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/api/ApiLogin.js",[],["186","187"],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/reducers/messages.js",["188"],"import { SET_MESSAGE, CLEAR_MESSAGE } from '../constants/actionTypes';\n\nexport default (messages = {}, action) => {\n  switch (action.type) {\n    case SET_MESSAGE:\n      console.log(action.payload)\n      return action.payload;\n    case CLEAR_MESSAGE:\n      return {};\n\n    default:\n      return messages;\n  }\n};\n\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/actions/messages.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/body/GamePage.js",["189"],"import {Typography, Card,  CardContent, CardActions, Button, Grid} from '@material-ui/core';\nimport { Link }from 'react-router-dom'\nimport {useSelector} from 'react-redux'\n\nexport const GamePage = (props) => {\n\n    const users = useSelector((state) => state.users)\n\n\n    const handleLevelEntry = async () =>{\n\n        console.log(users)\n        const permission = props.content.levels.some(level => level === users.userRole)\n\n           if(permission){\n                window.location.href= props.content.href\n           }else if(props.content.levels[0] === '/'){\n                window.location.href= props.content.href\n           }else{\n                props.content.setMessage('raise your level')\n           }\n      }\n\n    return(\n        <Grid item xs={11} sm={7} md={5} lg={3} style={{marginTop:'10px', cursor:'pointer'}}\n            onClick={handleLevelEntry}>\n\n                <Card variant=\"outlined\" >\n                    <CardContent >\n                        <Typography color=\"textSecondary\" gutterBottom>\n                        Game Zone\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {props.content.title}\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {props.content.subtitle}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {props.content.content1}\n                        <br />\n                            {props.content.content2}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\">Author: {props.content.author}</Button>\n                    </CardActions>\n                </Card>\n   \n        </Grid>\n    )\n}","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameMemory/Memory.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameMemory/styles.js",[],"/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameMemory/components/Form.js",["190","191","192","193","194"],"import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, ButtonGroup, Box, LinearProgress } from '@material-ui/core';\nimport {useDropzone} from 'react-dropzone'\nimport * as id3 from 'id3js';\nimport axios from 'axios'\nimport red from '@material-ui/core/colors/red';\nimport grey from '@material-ui/core/colors/grey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport {backEndProURL} from '../../../../api/ApiData'\n  \n\nconst Form = (props) => {\n\n  const [postData, setPostData] = useState({new: true ,id: '', type: '', title: '',creator: '',content: '', userfile: [], loading: false});\n  const [percentage, setPercentage ] = useState({loaded:'',total:'', percent:''})\n\n  const {getRootProps, getInputProps} =  useDropzone({\n    // accept: `${fileType}/*`,\n    maxFiles: 1,\n    onDrop: async (acceptedFiles) => {\n        setPostData({ ...postData, userfile: acceptedFiles})\n\n    }, \n  });\n\n\n  useEffect(()=>{\n      if(props.editPost){\n        setPostData({new: false, type: props.editPost.cover.mime, title: props.editPost.title, creator: props.editPost.creator, content: props.editPost.content, id: props.editPost.id})\n      }\n  },[props.editPost])\n\n  const setType = () =>{\n    if(postData.type.includes('audio')){\n        props.setLoading({loading: true, type: 'audio'})\n    }else if(postData.type.includes('video')){\n        props.setLoading({loading: true, type: 'video'})\n    }else if(postData.type.includes('image')){\n        props.setLoading({loading: true, type: 'image'})\n    }\n  }\n  const ClearType = () =>{\n    if(postData.type.includes('audio')){\n        props.setLoading({loading: false, type: 'audio'})\n    }else if(postData.type.includes('video')){\n        props.setLoading({loading: false, type: 'video'})\n    }else if(postData.type.includes('image')){\n        props.setLoading({loading: false, type: 'image'})\n    }\n  }\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if(postData.new === true){\n        let formData = new FormData();\n        console.log(postData.userfile[0])\n        formData.append('creator', postData.creator)\n        formData.append('content', postData.content)\n        formData.append('title', postData.userfile[0].name)\n        formData.append('cover',postData.userfile[0])\n\n        if(!postData.userfile[1] && postData.userfile[0].type.includes('audio')){\n            await id3.fromFile(postData.userfile[0]).then((tags)=>{\n                if(tags.images[0] !== undefined){\n                    var arrayBuffer = new Uint8Array(tags.images[0].data)\n                    var blob = new Blob([arrayBuffer], { type: \"image/jpeg\" } )\n                    const fileName = postData.userfile[0].name\n                    function blobToFile(blob, fileName){       \n                        return new File([blob], fileName, { lastModified: new Date().getTime(), type: blob.type })\n                    }\n  \n                    formData.append('cover2',blobToFile(blob, fileName) )         \n                }\n            })\n        }\n\n        // NEW POST\n            setType()\n\n            try {\n                await axios.post(`${backEndProURL}/memory-games`,formData,{\n                    headers:{\n                        'Content-Type': 'multipart/form-data',\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n                    },\n                    onUploadProgress: (progressEvent) =>{\n                        const {loaded, total} = progressEvent;\n                        let percent = Math.floor(loaded * 100 / total)\n                        console.log(`${loaded}kb of ${total}kb | ${percent}%`)\n                        setPercentage({loaded: loaded,total: total,percent: percent})\n                    }\n                })\n                ClearType()\n                setPercentage({loaded:'',total: '',percent: ''})\n\n            } catch (error) {\n                console.log(error.response)\n                ClearType()\n                setPercentage({loaded:'',total: '',percent: ''})\n            }\n\n    }else{\n            // UPDATE POST\n            let formData = new FormData();\n            formData.append('title', postData.title)\n            formData.append('creator', postData.creator)\n            formData.append('content', postData.content)\n            console.log(postData.type)\n            \n            setType()\n\n            try {\n                await axios.put(`${backEndProURL}/memory-games/${postData.id}`,formData,{\n                    headers:{\n                        'Content-Type': 'multipart/form-data',\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n                    },\n                    onUploadProgress: (progressEvent) =>{\n                        const {loaded, total} = progressEvent;\n                        let percent = Math.floor(loaded * 100 / total)\n                        console.log(`${loaded}kb of ${total}kb | ${percent}%`)\n                        setPercentage({loaded: loaded,total: total,percent: percent})\n                    }\n                })\n                ClearType()\n                setPercentage({loaded:'',total: '',percent: ''})\n\n            } catch (error) {\n                console.log(error)\n                ClearType()\n                setPercentage({loaded:'',total: '',percent: ''})\n\n            }\n            setPostData({ new:true, title:'', creator: '', content: '', id:'', type: '' })\n    }\n\n\n  };\n  \n\n  return (\n    <>\n    <form style={{backgroundColor:grey[50], borderRadius: '5px', padding: '10px'}} id=\"myForm\" align=\"center\" name=\"myForm\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\n\n    <Typography  variant=\"h6\">{ postData.new ? 'CREATE' : 'UPDATE'}</Typography>\n        {\n            percentage.percent && <>\n                    <LinearProgress variant=\"determinate\" value={percentage.percent} />\n                    <Typography variant=\"body2\" color=\"textSecondary\">{`${percentage.percent}%`}</Typography>\n            </>\n        }\n\n    {postData.new ? null : <TextField \n            fullWidth\n            label=\"Title\" \n            placeholder=\"The Title\" \n            variant=\"outlined\" \n            style={{marginBottom:\"5px\", marginTop: \"5px\"}} \n            value={postData.title}\n            onChange={(e)=>{setPostData({...postData, title: e.target.value })}}\n            />}\n\n    <TextField \n            fullWidth\n            label=\"Creator\" \n            placeholder=\"who is this\" \n            variant=\"outlined\" \n            style={{marginBottom:\"5px\", marginTop: \"5px\"}} \n            value={postData.creator}\n            onChange={(e)=>{setPostData({...postData, creator: e.target.value })}}\n            />\n    <TextField\n            style={{marginBottom:\"5px\", marginTop: \"5px\"}} \n            id=\"standard-textarea\"\n            label=\"Content\"\n            placeholder=\"write some memories\"\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            fullWidth\n            value={postData.content}\n            onChange={(e)=>{setPostData({...postData, content: e.target.value })}}\n        />\n\n    {postData.new ? <>\n            <ButtonGroup fullWidth>\n                <Button style={{fontSize: \"12px\"}} \n                    onClick={()=> {\n                    setPostData({...postData, userfile:[]})}} \n                    variant=\"contained\" \n                    style={{color: red[50], backgroundColor: red[500]}} >IMAGE</Button>\n                <Button style={{fontSize: \"12px\"}} \n                    onClick={()=> {\n                    setPostData({...postData, userfile:[]})}} \n                    variant=\"contained\" \n                    style={{color: grey[500], backgroundColor: grey[50]}} >VIDEO</Button>\n                <Button style={{fontSize: \"12px\"}} \n                    onClick={()=> {\n                    setPostData({...postData, userfile:[]})}} \n                    variant=\"contained\" \n                    style={{color: lightBlue[500], backgroundColor: lightBlue[50]}} >AUDIO</Button>\n            </ButtonGroup>\n\n            <Typography  color=\"primary\" variant=\"h5\" align=\"center\">file type: <span style={{color:red[400]}}>doesn't matter</span></Typography>\n\n            <Box border={1} style={{borderRadius: \"5px\", borderColor: grey[400]}}>\n                <section  >\n                <div  {...getRootProps()}>\n                    <input {...getInputProps()} />\n\n                    <Typography style={{padding: 16}}  variant=\"body1\" >Drag 'n' drop single file, or click to select single file</Typography>\n\n                </div>\n                <aside >\n\n                    {postData.userfile !==undefined ? postData.userfile.map(file => (\n            \n                            <div key={file.id}>{file.name}</div>\n\n                    )): <div></div>\n                    }\n                </aside>\n                \n                </section>     \n            </Box>\n            </> : null}\n        \n            {postData.new ? \n                <Button type=\"submit\" variant=\"contained\" type=\"submit\">Submit</Button> : \n                    <ButtonGroup fullWidth variant=\"contained\" >\n                        <Button type=\"submit\" style={{fontSize:'11px' , backgroundColor: lightBlue[300]}}>Submit</Button>\n                        <Button onClick={()=>{setPostData({...postData, title:'', creator: '', content: '', type: ''})}} style={{fontSize:'11px', backgroundColor: red[300]}}>Clear</Button>\n                        <Button onClick={()=>{setPostData({ new:true, title:'', creator: '', content: '', id:'', type: '' })}} style={{fontSize:'11px', backgroundColor: grey[300]}}>New</Button>\n                    </ButtonGroup>\n                }\n    \n    </form>\n\n    </>\n  );\n};\n\nexport default Form;\n","/Users/nanjinzhu/Desktop/react/strapi/react-front/src/components/games/gameMemory/components/Posts.js",["195","196"],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":45,"column":6,"nodeType":"203","endLine":45,"endColumn":8,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"205","line":8,"column":9,"nodeType":"206","endLine":8,"endColumn":42},{"ruleId":"207","severity":1,"message":"208","line":19,"column":15,"nodeType":"209","messageId":"210","endLine":19,"endColumn":21},{"ruleId":"207","severity":1,"message":"211","line":20,"column":10,"nodeType":"209","messageId":"210","endLine":20,"endColumn":14},{"ruleId":"207","severity":1,"message":"212","line":20,"column":16,"nodeType":"209","messageId":"210","endLine":20,"endColumn":23},{"ruleId":"207","severity":1,"message":"213","line":22,"column":10,"nodeType":"209","messageId":"210","endLine":22,"endColumn":17},{"ruleId":"207","severity":1,"message":"214","line":22,"column":19,"nodeType":"209","messageId":"210","endLine":22,"endColumn":29},{"ruleId":"201","severity":1,"message":"215","line":50,"column":8,"nodeType":"203","endLine":50,"endColumn":10,"suggestions":"216"},{"ruleId":"201","severity":1,"message":"217","line":11,"column":15,"nodeType":"218","endLine":15,"endColumn":6},{"ruleId":"207","severity":1,"message":"219","line":1,"column":15,"nodeType":"209","messageId":"210","endLine":1,"endColumn":23},{"ruleId":"207","severity":1,"message":"220","line":1,"column":25,"nodeType":"209","messageId":"210","endLine":1,"endColumn":34},{"ruleId":"207","severity":1,"message":"221","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":18},{"ruleId":"207","severity":1,"message":"222","line":12,"column":9,"nodeType":"209","messageId":"210","endLine":12,"endColumn":14},{"ruleId":"207","severity":1,"message":"223","line":13,"column":9,"nodeType":"209","messageId":"210","endLine":13,"endColumn":17},{"ruleId":"207","severity":1,"message":"224","line":2,"column":8,"nodeType":"209","messageId":"210","endLine":2,"endColumn":13},{"ruleId":"201","severity":1,"message":"202","line":27,"column":7,"nodeType":"203","endLine":27,"endColumn":9,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":3,"column":1,"nodeType":"228","endLine":33,"endColumn":3},{"ruleId":"197","replacedBy":"229"},{"ruleId":"199","replacedBy":"230"},{"ruleId":"226","severity":1,"message":"227","line":3,"column":1,"nodeType":"228","endLine":14,"endColumn":3},{"ruleId":"207","severity":1,"message":"231","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"232","line":2,"column":41,"nodeType":"209","messageId":"210","endLine":2,"endColumn":46},{"ruleId":"233","severity":1,"message":"234","line":193,"column":21,"nodeType":"235","endLine":193,"endColumn":72},{"ruleId":"233","severity":1,"message":"234","line":198,"column":21,"nodeType":"235","endLine":198,"endColumn":74},{"ruleId":"233","severity":1,"message":"234","line":203,"column":21,"nodeType":"235","endLine":203,"endColumn":84},{"ruleId":"233","severity":1,"message":"234","line":231,"column":59,"nodeType":"235","endLine":231,"endColumn":72},{"ruleId":"201","severity":1,"message":"236","line":55,"column":7,"nodeType":"203","endLine":55,"endColumn":9,"suggestions":"237"},{"ruleId":"201","severity":1,"message":"238","line":115,"column":7,"nodeType":"203","endLine":115,"endColumn":64,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'users.jwt'. Either include them or remove the dependency array.","ArrayExpression",["242"],"The 'linePoints' array makes the dependencies of useCallback Hook (at line 17) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'setJwt' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getLocalJwt', 'jwt', and 'users'. Either include them or remove the dependency array.",["243"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useState' is defined but never used.","'useEffect' is defined but never used.","'setUsers' is defined but never used.","'users' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'axios' is defined but never used.",["244"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["240"],["241"],"'Link' is defined but never used.","'Paper' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'props.loading.loading' and 'props.loading.type'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["246"],"no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"247","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [dispatch, users.jwt]",{"range":"256","text":"257"},"Update the dependencies array to be: [dispatch, getLocalJwt, jwt, users]",{"range":"258","text":"259"},{"range":"260","text":"257"},"Update the dependencies array to be: [props.loading.loading, props.loading.type]",{"range":"261","text":"262"},"Update the dependencies array to be: [checkedImg, checkedVid, checkedAudio, myfiles1, setMyfiles1, props]",{"range":"263","text":"264"},[1456,1458],"[dispatch, users.jwt]",[1342,1344],"[dispatch, getLocalJwt, jwt, users]",[810,812],[1912,1914],"[props.loading.loading, props.loading.type]",[3716,3773],"[checkedImg, checkedVid, checkedAudio, myfiles1, setMyfiles1, props]"]